// Firestore Security Rules for LinkWorkJA
// Copy and paste these rules into your Firebase Console > Firestore > Rules

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users collection - users can only access their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
    }
    
    // Jobs collection - authenticated users can read all jobs, create/update their own
    match /jobs/{jobId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
        (resource.data.employer_id == request.auth.uid || 
         request.auth.token.admin == true);
    }
    
    // Micro gigs collection - authenticated users can read all gigs, create/update their own
    match /micro_gigs/{gigId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
        (resource.data.agency_id == request.auth.uid || 
         request.auth.token.admin == true);
    }
    
    // Applications collection - users can only access their own applications
    match /applications/{applicationId} {
      allow read, write: if request.auth != null && 
        (resource.data.user_id == request.auth.uid || 
         resource.data.employer_id == request.auth.uid);
      allow create: if request.auth != null;
    }
    
    // Analytics collection - read-only for authenticated users
    match /analytics/{document} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.token.admin == true;
    }
    
    // Test collection - for development/testing
    match /test/{document} {
      allow read, write: if request.auth != null;
    }
    
    // Default deny rule
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
